        -:    0:Source:C:/Users/ardel/CLionProjects/lab6-/Car.cpp
        -:    0:Graph:C:\Users\ardel\CLionProjects\lab6-\cmake-build-debug-coverage\CMakeFiles\lab6_.dir\Car.cpp.gcno
        -:    0:Data:C:\Users\ardel\CLionProjects\lab6-\cmake-build-debug-coverage\CMakeFiles\lab6_.dir\Car.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "Car.h"
        -:    2:
function _ZN3Car21setRegistrationNumberENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 100%
        1:    3:void Car::setRegistrationNumber(string newRegistrationNr) {
        1:    4:    this->registrationNumber = newRegistrationNr;
        1:    4-block  0
call    0 returned 1
        1:    5:}
        -:    6:
function _ZN3Car11setProducerENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 100%
        1:    7:void Car::setProducer(string newProducer) {
        1:    8:    this->producer = newProducer;
        1:    8-block  0
call    0 returned 1
        1:    9:}
        -:   10:
function _ZN3Car8setModelENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 100%
        1:   11:void Car::setModel(string newModel) {
        1:   12:    this->model = newModel;
        1:   12-block  0
call    0 returned 1
        1:   13:}
        -:   14:
function _ZN3Car7setTypeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 100%
        1:   15:void Car::setType(string newType) {
        1:   16:    this->type = newType;
        1:   16-block  0
call    0 returned 1
        1:   17:}
        -:   18:
function _ZN3CareqERKS_ called 3 returned 100% blocks executed 100%
        3:   19:bool Car::operator==(const Car& ot)
        -:   20:{
        3:   21:    if (registrationNumber == ot.registrationNumber && producer == ot.producer && model == ot.model && type == ot.type)
        3:   21-block  0
call    0 returned 3
branch  1 taken 2 (fallthrough)
branch  2 taken 1
        2:   21-block  1
call    3 returned 2
branch  4 taken 1 (fallthrough)
branch  5 taken 1
        1:   21-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0
        1:   21-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        1:   21-block  4
        2:   21-block  5
        3:   21-block  6
branch 12 taken 1 (fallthrough)
branch 13 taken 2
        -:   22:    {
        1:   23:        return true;
        1:   23-block  0
        -:   24:    }
        2:   25:    return false;
        2:   25-block  0
        -:   26:
        -:   27:}
        -:   28:
function _Z21cmpRegistrationNumberRK3CarS1_ called 15 returned 100% blocks executed 80%
       15:   29:bool cmpRegistrationNumber(const Car& c1, const Car& c2)
        -:   30:{
       15:   31:    return c1.getRegistrationNumber() < c2.getRegistrationNumber();
       15:   31-block  0
call    0 returned 15
call    1 returned 15
branch  2 taken 15 (fallthrough)
branch  3 taken 0 (throw)
       15:   31-block  1
call    4 returned 15
call    5 returned 15
call    6 returned 15
       15:   31-block  2
    $$$$$:   31-block  3
call    7 never executed
        -:   32:}
        -:   33:
function _Z7cmpTypeRK3CarS1_ called 13 returned 100% blocks executed 80%
       13:   34:bool cmpType(const Car& c1, const Car& c2)
        -:   35:{
       13:   36:    return c1.getType() < c2.getType();
       13:   36-block  0
call    0 returned 13
call    1 returned 13
branch  2 taken 13 (fallthrough)
branch  3 taken 0 (throw)
       13:   36-block  1
call    4 returned 13
call    5 returned 13
call    6 returned 13
       13:   36-block  2
    $$$$$:   36-block  3
call    7 never executed
        -:   37:}
        -:   38:
function _Z16cmpProducerModelRK3CarS1_ called 17 returned 100% blocks executed 71%
       17:   39:bool cmpProducerModel(const Car& c1, const Car& c2) {
       17:   40:     if(c1.getProducer() == c2.getProducer())
       17:   40-block  0
call    0 returned 17
call    1 returned 17
branch  2 taken 17 (fallthrough)
branch  3 taken 0 (throw)
       17:   40-block  1
call    4 returned 17
call    5 returned 17
call    6 returned 17
branch  7 taken 2 (fallthrough)
branch  8 taken 15
    $$$$$:   40-block  2
call    9 never executed
    $$$$$:   40-block  3
call   10 never executed
        2:   41:         return c1.getModel() < c2.getModel();
        2:   41-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:   41-block  1
call    4 returned 2
call    5 returned 2
call    6 returned 2
    $$$$$:   41-block  2
call    7 never executed
    $$$$$:   41-block  3
call    8 never executed
        -:   42:     else
       15:   43:         return c1.getProducer() < c2.getProducer();
       15:   43-block  0
call    0 returned 15
call    1 returned 15
branch  2 taken 15 (fallthrough)
branch  3 taken 0 (throw)
       15:   43-block  1
call    4 returned 15
call    5 returned 15
call    6 returned 15
    $$$$$:   43-block  2
call    7 never executed
        -:   44:}
        -:   45:
        -:   46:/*bool cmpProducerModel(const Car& c1, const Car& c2) {
        -:   47:    if (c1.getProducer() < c2.getProducer()) {
        -:   48:        return true;
        -:   49:    }
        -:   50:    else if (c1.getProducer() == c2.getProducer()) {
        -:   51:        return c1.getModel() < c2.getModel();
        -:   52:    }
        -:   53:    else {
        -:   54:        return false;
        -:   55:    }
        -:   56:}*/
        -:   57:
        -:   58:/*(bool cmpProducer(const Car& c1, const Car& c2){
        -:   59:    return c1.getProducer() < c2.getProducer();
        -:   60:}*/
        -:   61:
function _Z10testGetSetv called 1 returned 100% blocks executed 47%
        1:   62:void testGetSet(){
        2:   63:    Car car1{"CJ 21 NEO", "Volvo", "V50", "Combi"};
        1:   63-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   63-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   63-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   63-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   63-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:   63-block  5
    $$$$$:   63-block  6
    $$$$$:   63-block  7
    $$$$$:   63-block  8
    $$$$$:   63-block  9
    $$$$$:   63-block 10
    $$$$$:   63-block 11
    $$$$$:   63-block 12
       1*:   64:    assert(car1.getRegistrationNumber() == "CJ 21 NEO");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   64-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   64-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   64-block  2
    %%%%%:   64-block  3
        1:   64-block  4
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   64-block  5
call   11 returned 1
    $$$$$:   64-block  6
branch 12 never executed
branch 13 never executed
    $$$$$:   64-block  7
call   14 never executed
    $$$$$:   64-block  8
       1*:   65:    assert(car1.getProducer() == "Volvo");
        1:   65-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   65-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   65-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   65-block  3
    %%%%%:   65-block  4
        1:   65-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   65-block  6
call   11 returned 1
    $$$$$:   65-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   65-block  8
call   14 never executed
    $$$$$:   65-block  9
       1*:   66:    assert(car1.getModel() == "V50");
        1:   66-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   66-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   66-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   66-block  3
    %%%%%:   66-block  4
        1:   66-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   66-block  6
call   11 returned 1
    $$$$$:   66-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   66-block  8
call   14 never executed
    $$$$$:   66-block  9
       1*:   67:    assert(car1.getType() == "Combi");
        1:   67-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   67-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   67-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   67-block  3
    %%%%%:   67-block  4
        1:   67-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   67-block  6
call   11 returned 1
    $$$$$:   67-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   67-block  8
call   14 never executed
    $$$$$:   67-block  9
        -:   68:
        2:   69:    Car car2{"CJ 67 ZDK", "Mazda", "3", "Hatchback"};
        1:   69-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   69-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   69-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   69-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   69-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:   69-block  5
    $$$$$:   69-block  6
    $$$$$:   69-block  7
    $$$$$:   69-block  8
    $$$$$:   69-block  9
    $$$$$:   69-block 10
    $$$$$:   69-block 11
    $$$$$:   69-block 12
       1*:   70:    assert(car2.getRegistrationNumber() == "CJ 67 ZDK");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   70-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   70-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   70-block  2
    %%%%%:   70-block  3
        1:   70-block  4
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   70-block  5
call   11 returned 1
    $$$$$:   70-block  6
branch 12 never executed
branch 13 never executed
    $$$$$:   70-block  7
call   14 never executed
    $$$$$:   70-block  8
       1*:   71:    assert(car2.getProducer() == "Mazda");
        1:   71-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   71-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   71-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   71-block  3
    %%%%%:   71-block  4
        1:   71-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   71-block  6
call   11 returned 1
    $$$$$:   71-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   71-block  8
call   14 never executed
    $$$$$:   71-block  9
       1*:   72:    assert(car2.getModel() == "3");
        1:   72-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   72-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   72-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   72-block  3
    %%%%%:   72-block  4
        1:   72-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   72-block  6
call   11 returned 1
    $$$$$:   72-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   72-block  8
call   14 never executed
    $$$$$:   72-block  9
       1*:   73:    assert(car2.getType() == "Hatchback");
        1:   73-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   73-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   73-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   73-block  3
    %%%%%:   73-block  4
        1:   73-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   73-block  6
call   11 returned 1
    $$$$$:   73-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   73-block  8
call   14 never executed
    $$$$$:   73-block  9
        -:   74:
        1:   75:    car2.setRegistrationNumber("B 22 IFK");
        1:   75-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   75-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   75-block  2
call    7 returned 1
call    8 returned 1
    $$$$$:   75-block  3
call    9 never executed
    $$$$$:   75-block  4
    $$$$$:   75-block  5
call   10 never executed
    $$$$$:   75-block  6
        1:   76:    car2.setProducer("BMW");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   76-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   76-block  1
call    7 returned 1
call    8 returned 1
    $$$$$:   76-block  2
call    9 never executed
    $$$$$:   76-block  3
    $$$$$:   76-block  4
call   10 never executed
    $$$$$:   76-block  5
        1:   77:    car2.setModel("Seria 4");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   77-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   77-block  1
call    7 returned 1
call    8 returned 1
    $$$$$:   77-block  2
call    9 never executed
    $$$$$:   77-block  3
    $$$$$:   77-block  4
call   10 never executed
    $$$$$:   77-block  5
        1:   78:    car2.setType("Coupe");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   78-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   78-block  1
call    7 returned 1
call    8 returned 1
    $$$$$:   78-block  2
call    9 never executed
    $$$$$:   78-block  3
    $$$$$:   78-block  4
call   10 never executed
    $$$$$:   78-block  5
        -:   79:
       1*:   80:    assert(car2.getRegistrationNumber() == "B 22 IFK");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   80-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   80-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   80-block  2
    %%%%%:   80-block  3
        1:   80-block  4
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   80-block  5
call   11 returned 1
    $$$$$:   80-block  6
branch 12 never executed
branch 13 never executed
    $$$$$:   80-block  7
call   14 never executed
    $$$$$:   80-block  8
       1*:   81:    assert(car2.getProducer() == "BMW");
        1:   81-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   81-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   81-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   81-block  3
    %%%%%:   81-block  4
        1:   81-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   81-block  6
call   11 returned 1
    $$$$$:   81-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   81-block  8
call   14 never executed
    $$$$$:   81-block  9
       1*:   82:    assert(car2.getModel() == "Seria 4");
        1:   82-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   82-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   82-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   82-block  3
    %%%%%:   82-block  4
        1:   82-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   82-block  6
call   11 returned 1
    $$$$$:   82-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   82-block  8
call   14 never executed
    $$$$$:   82-block  9
       1*:   83:    assert(car2.getType() == "Coupe");
        1:   83-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   83-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   83-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   83-block  3
    %%%%%:   83-block  4
        1:   83-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   83-block  6
call   11 returned 1
    $$$$$:   83-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   83-block  8
call   14 never executed
    $$$$$:   83-block  9
        -:   84:
        -:   85:
        1:   86:}
        1:   86-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:   86-block  1
call    2 never executed
    $$$$$:   86-block  2
call    3 never executed
        -:   87:
function _Z21testCarOperatorEqualsv called 1 returned 100% blocks executed 43%
        1:   88:void testCarOperatorEquals() {
        2:   89:    Car car1{"CJ 21 NEO", "Volvo", "V50", "Combi"};
        1:   89-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   89-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   89-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   89-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   89-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:   89-block  5
    $$$$$:   89-block  6
    $$$$$:   89-block  7
    $$$$$:   89-block  8
    $$$$$:   89-block  9
    $$$$$:   89-block 10
    $$$$$:   89-block 11
    $$$$$:   89-block 12
        2:   90:    Car car2{"CJ 21 NEO", "Volvo", "V50", "Combi"};
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   90-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   90-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   90-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   90-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:   90-block  4
    $$$$$:   90-block  5
    $$$$$:   90-block  6
    $$$$$:   90-block  7
    $$$$$:   90-block  8
    $$$$$:   90-block  9
    $$$$$:   90-block 10
    $$$$$:   90-block 11
        2:   91:    Car car3{"CJ 21 NEP", "Volvo", "V50", "Combi"};
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   91-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   91-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   91-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   91-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:   91-block  4
    $$$$$:   91-block  5
    $$$$$:   91-block  6
    $$$$$:   91-block  7
    $$$$$:   91-block  8
    $$$$$:   91-block  9
    $$$$$:   91-block 10
    $$$$$:   91-block 11
        2:   92:    Car car4{"CJ 21 NEO", "Opel", "Astra", "Sedan"};
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   92-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   92-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   92-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   92-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
    $$$$$:   92-block  4
    $$$$$:   92-block  5
    $$$$$:   92-block  6
    $$$$$:   92-block  7
    $$$$$:   92-block  8
    $$$$$:   92-block  9
    $$$$$:   92-block 10
    $$$$$:   92-block 11
        -:   93:
       1*:   94:    assert(car1 == car2);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   94-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
        1:   94-block  1
    %%%%%:   94-block  2
       1*:   95:    assert(!(car1 == car3));
        1:   95-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   95-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        1:   95-block  2
    %%%%%:   95-block  3
       1*:   96:    assert(!(car1 == car4));
        1:   96-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   96-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        1:   96-block  2
    %%%%%:   96-block  3
        1:   97:}
        1:   97-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
    $$$$$:   97-block  1
call    4 never executed
    $$$$$:   97-block  2
call    5 never executed
    $$$$$:   97-block  3
call    6 never executed
    $$$$$:   97-block  4
call    7 never executed
        -:   98:
function _Z10testDomainv called 1 returned 100% blocks executed 100%
        1:   99:void testDomain(){
        1:  100:    testGetSet();
        1:  100-block  0
call    0 returned 1
        1:  101:    testCarOperatorEquals();
call    0 returned 1
        1:  102:}

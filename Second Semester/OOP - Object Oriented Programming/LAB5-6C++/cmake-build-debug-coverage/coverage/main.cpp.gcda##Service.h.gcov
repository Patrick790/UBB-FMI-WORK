        -:    0:Source:C:/Users/ardel/CLionProjects/lab6-/Service.h
        -:    0:Graph:C:\Users\ardel\CLionProjects\lab6-\cmake-build-debug-coverage\CMakeFiles\lab6_.dir\main.cpp.gcno
        -:    0:Data:C:\Users\ardel\CLionProjects\lab6-\cmake-build-debug-coverage\CMakeFiles\lab6_.dir\main.cpp.gcda
        -:    0:Runs:1
        -:    1:#pragma once
        -:    2:
        -:    3:#include "Car.h"
        -:    4:#include "Repo.h"
        -:    5:#include "LstMasina.h"
        -:    6:#include <string>
        -:    7:#include <vector>
        -:    8:
        -:    9:#include <functional>
        -:   10:#include "validator.h"
        -:   11:
        -:   12:using std::vector;
        -:   13:using std::function;
        -:   14:
        -:   15:class carService {
        -:   16:private:
        -:   17:    CarRepo& repo;
        -:   18:    carValidator& val;
        -:   19:
        -:   20:    listaMasina currentList;
        -:   21:
        -:   22:public:
function _ZN10carServiceC1ER7CarRepoR12carValidator called 6 returned 100% blocks executed 100%
        6:   23:    carService(CarRepo& carRepo, carValidator& val): repo {carRepo }, val {val } {}
        6:   23-block  0
call    0 returned 6
        -:   24:
        -:   25:    carService(const carService& ot) = delete;
        -:   26:
        -:   27:    void addCar(const string& registrationNumber, const string& producer, const string& model, const string& type);
        -:   28:
        -:   29:    void deleteCar(const int& poz);
        -:   30:
        -:   31:    void modifyCar(const int &poz, const string& registrationNumber, const string& producer, const string& model, const string& type);
        -:   32:
        -:   33:    vector<Car>filterProducer(const string& producer);
        -:   34:
        -:   35:    vector<Car>filterType(const string& type);
        -:   36:
        -:   37:    const Car& find(const string& registrationNumber);
        -:   38:
        -:   39:    vector<Car>sortByRegistrationNumber();
        -:   40:    vector<Car>sortByType();
        -:   41:    vector<Car>sortByProducerModel();
        -:   42:
        -:   43:    vector<Car>& getAllCars(){
        -:   44:        return this->repo.getAllCars();
        -:   45:    }
        -:   46:
        -:   47:    void addToLista(string registrationNumber);
        -:   48:
        -:   49:    int addRandomtoListaMasina(int cate);
        -:   50:
        -:   51:    void emptyListaMasina();
        -:   52:
        -:   53:    const vector<Car>& getListaMasini();
        -:   54:
function _ZN10carServiceD1Ev called 5 returned 100% blocks executed 100%
        5:   55:    ~carService() = default;
        5:   55-block  0
call    0 returned 5
        -:   56:
        -:   57:
        -:   58:};
        -:   59:
        -:   60:void testService();

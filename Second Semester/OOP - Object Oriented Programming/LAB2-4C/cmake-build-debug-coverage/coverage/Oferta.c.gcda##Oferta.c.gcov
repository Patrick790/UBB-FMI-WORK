        -:    0:Source:C:/Users/ardel/CLionProjects/lab2-4agentie/Oferta.c
        -:    0:Graph:C:\Users\ardel\CLionProjects\lab2-4agentie\cmake-build-debug-coverage\CMakeFiles\lab2_4agentie.dir\Oferta.c.gcno
        -:    0:Data:C:\Users\ardel\CLionProjects\lab2-4agentie\cmake-build-debug-coverage\CMakeFiles\lab2_4agentie.dir\Oferta.c.gcda
        -:    0:Runs:1
        -:    1:#include "Oferta.h"
        -:    2:#include<stdio.h>
        -:    3:#include<string.h>
        -:    4:#include<stdlib.h>
        -:    5:#include<assert.h>
        -:    6:
function createOferta called 65 returned 100% blocks executed 90%
       65:    7:Oferta* createOferta(char* tip, char* destinatie, char* data, int pret)
        -:    8:{
        -:    9:    //Creare oferta
        -:   10:    //:param: tip(char*)
        -:   11:    //:param: destinatie(char*)
        -:   12:    //:param: data(char*)
        -:   13:    //:param: pret(int)
        -:   14:    //:retrun: oferta(Oferta*)
        -:   15:
       65:   16:    Oferta* o = malloc(sizeof(Oferta));
       65:   17:    if (o == NULL)
       65:   17-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 65
        -:   18:    {
    #####:   19:        return NULL;
    %%%%%:   19-block  0
        -:   20:    }
       65:   21:    o->tip = malloc(sizeof(char) * (strlen(tip) + 1));
       65:   22:    if (o->tip != NULL)
       65:   22-block  0
branch  0 taken 65 (fallthrough)
branch  1 taken 0
        -:   23:    {
       65:   24:        strcpy(o->tip, tip);
       65:   24-block  0
        -:   25:    }
       65:   26:    o->destinatie = malloc(sizeof(char) * (strlen(destinatie) + 1));
       65:   27:    if (o->destinatie != NULL)
       65:   27-block  0
branch  0 taken 65 (fallthrough)
branch  1 taken 0
        -:   28:    {
       65:   29:        strcpy(o->destinatie, destinatie);
       65:   29-block  0
        -:   30:    }
       65:   31:    o->data = malloc(sizeof(char) * (strlen(data) + 1));
       65:   32:    if (o->data != NULL)
       65:   32-block  0
branch  0 taken 65 (fallthrough)
branch  1 taken 0
        -:   33:    {
       65:   34:        strcpy(o->data, data);
       65:   34-block  0
        -:   35:    }
       65:   36:    o->pret = pret;
        -:   37:
       65:   38:    return o;
       65:   38-block  0
        -:   39:}
        -:   40:
function destroyOferta called 54 returned 100% blocks executed 100%
       54:   41:void destroyOferta(Oferta* o)
        -:   42:{
        -:   43:    //Distrugere oferta si eliberare memorie
        -:   44:
       54:   45:    if (o == NULL)
       54:   45-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 53
        -:   46:    {
        1:   47:        return;
        1:   47-block  0
        -:   48:    }
        -:   49:
       53:   50:    free(o->tip);
        -:   51:    //o->tip = NULL;
       53:   52:    free(o->destinatie);
        -:   53:    //o->destinatie = NULL;
       53:   54:    free(o->data);
        -:   55:    //o->data = NULL;
        -:   56:
       53:   57:    free(o);
       53:   57-block  0
        -:   58:    //o = NULL;
        -:   59:}
        -:   60:
function getTip called 41 returned 100% blocks executed 100%
       41:   61:char* getTip(Oferta* o)
        -:   62:{
        -:   63:    //Returneaza tipul ofertei
        -:   64:    //:param: o(Oferta*)
        -:   65:    //:return: tip(char*)
        -:   66:
       41:   67:    if (o == NULL)
       41:   67-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 40
        -:   68:    {
        1:   69:        return NULL;
        1:   69-block  0
        -:   70:    }
       40:   71:    return o->tip;
       40:   71-block  0
        -:   72:}
        -:   73:
function getDestinatie called 47 returned 100% blocks executed 100%
       47:   74:char* getDestinatie(Oferta* o)
        -:   75:{
        -:   76:    //Returneaza destinatia ofertei
        -:   77:    //:param: o(Oferta*)
        -:   78:    //:return: destinatie(char*)
        -:   79:
       47:   80:    if (o == NULL)
       47:   80-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 46
        -:   81:    {
        1:   82:        return NULL;
        1:   82-block  0
        -:   83:    }
       46:   84:    return o->destinatie;
       46:   84-block  0
        -:   85:}
        -:   86:
function getData called 41 returned 100% blocks executed 100%
       41:   87:char* getData(Oferta* o)
        -:   88:{
        -:   89:    //Returneaza data ofertei
        -:   90:    //:param: o(Oferta*)
        -:   91:    //:return: data(char*)
        -:   92:
       41:   93:    if (o == NULL)
       41:   93-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 40
        -:   94:    {
        1:   95:        return NULL;
        1:   95-block  0
        -:   96:    }
       40:   97:    return o->data;
       40:   97-block  0
        -:   98:}
        -:   99:
function getPret called 46 returned 100% blocks executed 100%
       46:  100:int getPret(Oferta* o)
        -:  101:{	//Returneaza pretul ofertei
        -:  102:    //:param: o(Oferta*)
        -:  103:    //:return: pret(int)
       46:  104:    if (o == NULL)
       46:  104-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 45
        -:  105:    {
        1:  106:        return -1;
        1:  106-block  0
        -:  107:    }
       45:  108:    return o->pret;
       45:  108-block  0
        -:  109:}
        -:  110:
function setPret called 6 returned 100% blocks executed 100%
        6:  111:int setPret(Oferta* o, int pret_nou)
        -:  112:{	//Seteaza pretul ofertei
        -:  113:    //:param: o(Oferta*)
        -:  114:    //:param: pret_nou(int)
        -:  115:    //:return: NULL/1 (not ok/ok)
        -:  116:
        6:  117:    if (o == NULL)
        6:  117-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 5
        -:  118:    {
        1:  119:        return -1;
        1:  119-block  0
        -:  120:    }
        -:  121:
        5:  122:    o->pret = pret_nou;
        -:  123:
        5:  124:    return 1;
        5:  124-block  0
        -:  125:}
        -:  126:
function copyO called 36 returned 100% blocks executed 100%
       36:  127:Oferta* copyO(Oferta* o)
        -:  128:{
       36:  129:    return createOferta(getTip(o), getDestinatie(o), getData(o), getPret(o));
       36:  129-block  0
call    0 returned 36
call    1 returned 36
call    2 returned 36
call    3 returned 36
call    4 returned 36
        -:  130:}
function toString called 1 returned 100% blocks executed 38%
        1:  131:void toString(Oferta* o, char str[])
        -:  132:{
        -:  133:    //Transforma oferta in string
        -:  134:
        1:  135:    if (o == NULL)
        1:  135-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        -:  136:    {
        1:  137:        return;
        1:  137-block  0
        -:  138:    }
    #####:  139:    sprintf(str, "Oferta: %s | Destinatia: %s | Data: %s | Pretul: %d", getTip(o),getDestinatie(o), getData(o), getPret(o));
    %%%%%:  139-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
        -:  140:}
        -:  141:
        -:  142://-------------------Tests-------------------
function testget called 1 returned 100% blocks executed 62%
        1:  143:void testget()
        -:  144:{
        1:  145:    Oferta* o = createOferta("munte", "Fagaras", "1/1/2021", 200);
        1:  145-block  0
call    0 returned 1
       1*:  146:    assert(strcmp(getData(o),"1/1/2021")==0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  146-block  0
call    3 never executed
        1:  146-block  1
       1*:  147:    assert(strcmp(getDestinatie(o),"Fagaras") == 0);
        1:  147-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  147-block  1
call    3 never executed
        1:  147-block  2
       1*:  148:    assert(getPret(o) == 200);
        1:  148-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  148-block  1
call    3 never executed
        1:  148-block  2
       1*:  149:    assert(setPret(o, 100) == 1);
        1:  149-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  149-block  1
call    3 never executed
        1:  149-block  2
       1*:  150:    assert(strcmp(getTip(o),"munte")==0);
        1:  150-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  150-block  1
call    3 never executed
        1:  150-block  2
       1*:  151:    assert(strcmp(getData(o), "1/1/202") != 0);
        1:  151-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  151-block  1
call    3 never executed
        1:  151-block  2
       1*:  152:    assert(strcmp(getDestinatie(o), "Fagas") != 0);
        1:  152-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  152-block  1
call    3 never executed
        1:  152-block  2
       1*:  153:    assert(getPret(o) != 230);
        1:  153-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  153-block  1
call    3 never executed
        1:  153-block  2
       1*:  154:    assert(setPret(o, 200) == 1);
        1:  154-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  154-block  1
call    3 never executed
        1:  154-block  2
       1*:  155:    assert(strcmp(getTip(o), "mare") != 0);
        1:  155-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  155-block  1
call    3 never executed
        1:  155-block  2
       1*:  156:    assert(setPret(NULL,100) == -1);
        1:  156-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  156-block  1
call    3 never executed
        1:  156-block  2
       1*:  157:    assert(getData(NULL) == NULL);
        1:  157-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  157-block  1
call    3 never executed
        1:  157-block  2
       1*:  158:    assert(getDestinatie(NULL) == NULL);
        1:  158-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  158-block  1
call    3 never executed
        1:  158-block  2
       1*:  159:    assert(getPret(NULL) == -1);
        1:  159-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  159-block  1
call    3 never executed
        1:  159-block  2
       1*:  160:    assert(getTip(NULL) == NULL);
        1:  160-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  160-block  1
call    3 never executed
        1:  160-block  2
        1:  161:    toString(NULL, "a");
        1:  161-block  0
call    0 returned 1
        1:  162:    destroyOferta(o);
call    0 returned 1
        1:  163:    destroyOferta(NULL);
call    0 returned 1
        -:  164:
        1:  165:}
        -:  166:
function testsOferta called 1 returned 100% blocks executed 100%
        1:  167:void testsOferta() {
        1:  168:    testget();
        1:  168-block  0
call    0 returned 1
        1:  169:}

from domain import dto
from domain.dto import *

class PersonEventRepository:
    def __init__(self, personRepository, enrollRepository):
        self.person_repository = personRepository
        self.enroll_respository = enrollRepository
        self.all_person_events = []

    def save_p(self):
        persons = self.person_repository.get_all()
        enrolls = self.enroll_respository.get_all()
        for person in persons:
            self.all_person_events.append(PersonEventDTOAssembler.create_person_dto(person,enrolls))
        return self.all_person_events

    def create_dto_p(self):
        return list(self.save_p())

class EventNrRepository:
    def __init__(self, eventRepository, enrollRepository):
        self.event_repository = eventRepository
        self.enroll_repository = enrollRepository
        self.all_events = []

    def save_e(self):
        events = self.event_repository.get_all()
        enrolls = self.enroll_repository.get_all()
        for event in events:
            self.all_events.append(EventNrDTOAssembler.create_event_dto(event, enrolls))
        return self.all_events

    def create_dto_e(self):
        return list(self.save_e())















































































































































































































































































































































































































































































































































































































